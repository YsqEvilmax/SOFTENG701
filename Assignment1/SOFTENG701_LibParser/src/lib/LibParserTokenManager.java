/* Generated By:JavaCC: Do not edit this line. LibParserTokenManager.java */
package lib;

/** Token Manager. */
public class LibParserTokenManager implements LibParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x1101000L) != 0L)
         {
            jjmatchedKind = 67;
            return 194;
         }
         if ((active0 & 0x40000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 67;
            return 7;
         }
         if ((active0 & 0x22000L) != 0L)
         {
            jjmatchedKind = 67;
            return 135;
         }
         if ((active0 & 0xe9ca00L) != 0L)
         {
            jjmatchedKind = 67;
            return 205;
         }
         if ((active0 & 0x4000000L) != 0L)
            return 206;
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 67;
            return 168;
         }
         if ((active0 & 0x2000000L) != 0L || (active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 67;
            return 40;
         }
         if ((active0 & 0x200000000L) != 0L)
            return 81;
         if ((active0 & 0x20000000000L) != 0L)
            return 10;
         if ((active0 & 0x40000000000L) != 0L)
            return 58;
         return -1;
      case 1:
         if ((active0 & 0x4000000L) != 0L || (active1 & 0x30L) != 0L)
            return 180;
         if ((active0 & 0x3fffe00L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 67;
               jjmatchedPos = 0;
            }
            return 180;
         }
         return -1;
      case 2:
         if ((active0 & 0x4000L) != 0L)
            return 181;
         if ((active0 & 0x3ffbe00L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 67;
               jjmatchedPos = 0;
            }
            return 181;
         }
         return -1;
      case 3:
         if ((active0 & 0xf00000L) != 0L)
            return 182;
         if ((active0 & 0x30fbe00L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 67;
               jjmatchedPos = 0;
            }
            return 182;
         }
         return -1;
      case 4:
         if ((active0 & 0x14aa000L) != 0L)
            return 183;
         if ((active0 & 0x2051e00L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 67;
               jjmatchedPos = 0;
            }
            return 183;
         }
         return -1;
      case 5:
         if ((active0 & 0x2410000L) != 0L)
            return 184;
         if ((active0 & 0x41e00L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 67;
               jjmatchedPos = 0;
            }
            return 184;
         }
         return -1;
      case 6:
         if ((active0 & 0x41800L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 67;
               jjmatchedPos = 0;
            }
            return 185;
         }
         if ((active0 & 0x400600L) != 0L)
            return 185;
         return -1;
      case 7:
         if ((active0 & 0x401000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 7;
            return 207;
         }
         if ((active0 & 0x40800L) != 0L)
            return 207;
         return -1;
      case 8:
         if ((active0 & 0x401000L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 64;
               jjmatchedPos = 7;
            }
            return 207;
         }
         return -1;
      case 9:
         if ((active0 & 0x400000L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 64;
               jjmatchedPos = 7;
            }
            return 207;
         }
         if ((active0 & 0x1000L) != 0L)
            return 207;
         return -1;
      case 10:
         if ((active0 & 0x400000L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 64;
               jjmatchedPos = 7;
            }
            return 207;
         }
         return -1;
      case 11:
         if ((active0 & 0x400000L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 64;
               jjmatchedPos = 7;
            }
            return 207;
         }
         return -1;
      case 12:
         if ((active0 & 0x400000L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 64;
               jjmatchedPos = 7;
            }
            return 207;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 34:
         return jjStartNfaWithStates_0(0, 33, 81);
      case 36:
         return jjStartNfaWithStates_0(0, 41, 10);
      case 40:
         return jjStopAtPos(0, 27);
      case 41:
         return jjStopAtPos(0, 28);
      case 44:
         return jjStopAtPos(0, 36);
      case 45:
         return jjStopAtPos(0, 38);
      case 46:
         return jjStopAtPos(0, 37);
      case 47:
         return jjStartNfaWithStates_0(0, 42, 58);
      case 58:
         return jjStopAtPos(0, 34);
      case 59:
         return jjStopAtPos(0, 35);
      case 64:
         return jjStopAtPos(0, 40);
      case 65:
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x10L);
      case 66:
         return jjMoveStringLiteralDfa1_0(0xc00800L, 0x0L);
      case 67:
         return jjMoveStringLiteralDfa1_0(0x10000L, 0x0L);
      case 69:
         return jjMoveStringLiteralDfa1_0(0x84000L, 0x0L);
      case 72:
         return jjMoveStringLiteralDfa1_0(0x8000L, 0x0L);
      case 76:
         return jjMoveStringLiteralDfa1_0(0x200L, 0x0L);
      case 80:
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x20L);
      case 82:
         return jjMoveStringLiteralDfa1_0(0x200000L, 0x0L);
      case 83:
         return jjMoveStringLiteralDfa1_0(0x22000L, 0x0L);
      case 84:
         return jjMoveStringLiteralDfa1_0(0x1101000L, 0x0L);
      case 87:
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      case 91:
         return jjStopAtPos(0, 31);
      case 93:
         return jjStopAtPos(0, 32);
      case 95:
         return jjStopAtPos(0, 39);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x4000000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 29);
      case 125:
         return jjStopAtPos(0, 30);
      default :
         return jjMoveNfa_0(8, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000L, active1, 0L);
      case 69:
         return jjMoveStringLiteralDfa2_0(active0, 0x400L, active1, 0L);
      case 73:
         return jjMoveStringLiteralDfa2_0(active0, 0x1001200L, active1, 0L);
      case 76:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000L, active1, 0L);
      case 77:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(1, 68, 180);
         else if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(1, 69, 180);
         return jjMoveStringLiteralDfa2_0(active0, 0x80000L, active1, 0L);
      case 78:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000L, active1, 0L);
      case 79:
         return jjMoveStringLiteralDfa2_0(active0, 0xc48000L, active1, 0L);
      case 84:
         return jjMoveStringLiteralDfa2_0(active0, 0x22000L, active1, 0L);
      case 85:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000800L, active1, 0L);
      case 89:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000L, active1, 0L);
      case 111:
         if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(1, 26, 180);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa3_0(active0, 0xa2000L);
      case 66:
         return jjMoveStringLiteralDfa3_0(active0, 0x600L);
      case 68:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(2, 14, 181);
         break;
      case 73:
         return jjMoveStringLiteralDfa3_0(active0, 0x800L);
      case 77:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000L);
      case 79:
         return jjMoveStringLiteralDfa3_0(active0, 0xc10000L);
      case 80:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000L);
      case 83:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000L);
      case 84:
         return jjMoveStringLiteralDfa3_0(active0, 0x3200000L);
      case 85:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 69:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(3, 20, 182);
         else if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(3, 21, 182);
         return jjMoveStringLiteralDfa4_0(active0, 0x1000L);
      case 70:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000L);
      case 72:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000L);
      case 73:
         return jjMoveStringLiteralDfa4_0(active0, 0xc0000L);
      case 75:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0x400000L);
      case 76:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000800L);
      case 82:
         return jjMoveStringLiteralDfa4_0(active0, 0xa200L);
      case 83:
         return jjMoveStringLiteralDfa4_0(active0, 0x10400L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa5_0(active0, 0x200L);
      case 67:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000L);
      case 68:
         return jjMoveStringLiteralDfa5_0(active0, 0x800L);
      case 69:
         if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(4, 24, 183);
         return jjMoveStringLiteralDfa5_0(active0, 0x10000L);
      case 70:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(4, 17, 183);
         break;
      case 73:
         return jjMoveStringLiteralDfa5_0(active0, 0x400L);
      case 76:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(4, 19, 183);
         break;
      case 79:
         return jjMoveStringLiteralDfa5_0(active0, 0x2001000L);
      case 83:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(4, 15, 183);
         break;
      case 84:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(4, 13, 183);
         return jjMoveStringLiteralDfa5_0(active0, 0x40000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 68:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(5, 16, 184);
         break;
      case 70:
         return jjMoveStringLiteralDfa6_0(active0, 0x1000L);
      case 73:
         return jjMoveStringLiteralDfa6_0(active0, 0x40800L);
      case 79:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000L);
      case 82:
         if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(5, 25, 184);
         return jjMoveStringLiteralDfa6_0(active0, 0x200L);
      case 84:
         return jjMoveStringLiteralDfa6_0(active0, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 69:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(6, 10, 185);
         break;
      case 76:
         return jjMoveStringLiteralDfa7_0(active0, 0x400000L);
      case 78:
         return jjMoveStringLiteralDfa7_0(active0, 0x800L);
      case 79:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000L);
      case 89:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(6, 9, 185);
         return jjMoveStringLiteralDfa7_0(active0, 0x1000L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 69:
         return jjMoveStringLiteralDfa8_0(active0, 0x1000L);
      case 71:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(7, 11, 207);
         break;
      case 76:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000L);
      case 78:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(7, 18, 207);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa9_0(active0, 0x1000L);
      case 69:
         return jjMoveStringLiteralDfa9_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 67:
         return jjMoveStringLiteralDfa10_0(active0, 0x400000L);
      case 82:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(9, 12, 207);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 84:
         return jjMoveStringLiteralDfa11_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 73:
         return jjMoveStringLiteralDfa12_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 79:
         return jjMoveStringLiteralDfa13_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 78:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(13, 22, 207);
         break;
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 205;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                  }
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 46)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 46)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 46)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 180:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 81:
                  if ((0x7ff200100000000L & l) != 0L)
                     jjCheckNAddTwoStates(79, 80);
                  if (curChar == 32)
                     jjCheckNAddTwoStates(77, 78);
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(3, 6);
                  else if (curChar == 34)
                     jjCheckNAddStates(7, 9);
                  else if (curChar == 47)
                     jjAddStates(10, 12);
                  else if (curChar == 36)
                     jjCheckNAdd(10);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAddStates(13, 17);
                  }
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  break;
               case 58:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(71, 72);
                  else if (curChar == 47)
                     jjCheckNAddStates(18, 20);
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 46)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 46)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 46)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 46)
                     jjCheckNAdd(174);
                  break;
               case 4:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 9:
                  if (curChar == 36)
                     jjCheckNAdd(10);
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAddTwoStates(10, 11);
                  break;
               case 11:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 57:
                  if (curChar == 47)
                     jjAddStates(10, 12);
                  break;
               case 59:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddStates(18, 20);
                  break;
               case 60:
                  if ((0x2400L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 61:
                  if (curChar == 10 && kind > 6)
                     kind = 6;
                  break;
               case 62:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(64, 65);
                  break;
               case 64:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(64, 65);
                  break;
               case 65:
                  if (curChar == 42)
                     jjCheckNAddStates(21, 23);
                  break;
               case 66:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(67, 65);
                  break;
               case 67:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(67, 65);
                  break;
               case 68:
                  if (curChar == 47 && kind > 7)
                     kind = 7;
                  break;
               case 69:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 70:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(71, 72);
                  break;
               case 71:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(71, 72);
                  break;
               case 72:
                  if (curChar == 42)
                     jjCheckNAddStates(24, 26);
                  break;
               case 73:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(74, 72);
                  break;
               case 74:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(74, 72);
                  break;
               case 75:
                  if (curChar == 47 && kind > 8)
                     kind = 8;
                  break;
               case 76:
                  if (curChar == 34)
                     jjCheckNAddStates(7, 9);
                  break;
               case 77:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(77, 78);
                  break;
               case 78:
                  if (curChar == 34 && kind > 43)
                     kind = 43;
                  break;
               case 79:
                  if ((0x7ff200100000000L & l) != 0L)
                     jjCheckNAddTwoStates(79, 80);
                  break;
               case 80:
                  if (curChar == 34 && kind > 65)
                     kind = 65;
                  break;
               case 82:
                  if (curChar == 47)
                     jjCheckNAdd(83);
                  break;
               case 83:
                  if ((0xe00000000000L & l) != 0L)
                     jjCheckNAddTwoStates(83, 84);
                  break;
               case 84:
                  if (curChar == 34 && kind > 49)
                     kind = 49;
                  break;
               case 85:
               case 90:
                  if (curChar == 47)
                     jjCheckNAdd(82);
                  break;
               case 86:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 91:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAddStates(13, 17);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) != 0L && kind > 44)
                     kind = 44;
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(104);
                  break;
               case 104:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 111:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(3, 6);
                  break;
               case 172:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 173:
                  if (curChar == 46)
                     jjCheckNAdd(174);
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(27, 29);
                  break;
               case 176:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAddTwoStates(176, 177);
                  break;
               case 177:
                  if (curChar == 46)
                     jjCheckNAdd(178);
                  break;
               case 178:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAddTwoStates(177, 178);
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 187:
                  if (curChar == 46 && kind > 66)
                     kind = 66;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 185:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                  }
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 135:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x7fffffe00000000L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAdd(188);
                  }
                  if (curChar == 117)
                     jjCheckNAdd(148);
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 146;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 134;
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 144;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 168:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x7fffffe00000000L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAdd(188);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 169;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 184:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 183:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 182:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 181:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 194:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x7fffffe00000000L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAdd(188);
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 203;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 201;
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 199;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 206:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 180:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 81:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(79, 80);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(77, 78);
                  if (curChar == 104)
                     jjAddStates(30, 31);
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3, 6);
                  if ((0x7fffffeL & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAddTwoStates(187, 188);
                  }
                  if (curChar == 84)
                     jjAddStates(32, 35);
                  else if (curChar == 87)
                     jjAddStates(36, 37);
                  else if (curChar == 77)
                     jjAddStates(38, 41);
                  else if (curChar == 83)
                     jjAddStates(42, 46);
                  else if (curChar == 70)
                     jjAddStates(47, 50);
                  else if (curChar == 74)
                     jjAddStates(51, 53);
                  else if (curChar == 65)
                     jjAddStates(54, 55);
                  else if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 26;
                  else if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 20;
                  else if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 207:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  break;
               case 7:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x7fffffe00000000L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAdd(188);
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 205:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x7fffffe00000000L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAdd(188);
                  }
                  break;
               case 40:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if (curChar == 64)
                     jjCheckNAdd(176);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x7fffffe00000000L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAdd(188);
                  }
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 43;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 0:
                  if (curChar == 101 && kind > 45)
                     kind = 45;
                  break;
               case 1:
               case 108:
                  if (curChar == 109)
                     jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 5:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 14:
                  if (curChar == 114 && kind > 53)
                     kind = 53;
                  break;
               case 15:
               case 22:
               case 28:
               case 129:
                  if (curChar == 101)
                     jjCheckNAdd(14);
                  break;
               case 16:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 23:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 29:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 65)
                     jjAddStates(54, 55);
                  break;
               case 36:
                  if (curChar == 116 && kind > 53)
                     kind = 53;
                  break;
               case 37:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 41:
                  if (curChar == 108 && kind > 53)
                     kind = 53;
                  break;
               case 42:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 74)
                     jjAddStates(51, 53);
                  break;
               case 46:
                  if (curChar == 121 && kind > 53)
                     kind = 53;
                  break;
               case 47:
                  if (curChar == 108)
                     jjCheckNAdd(46);
                  break;
               case 48:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
               case 115:
                  if (curChar == 114)
                     jjCheckNAdd(46);
                  break;
               case 50:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 101 && kind > 53)
                     kind = 53;
                  break;
               case 55:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 59:
                  jjAddStates(18, 20);
                  break;
               case 64:
                  jjCheckNAddTwoStates(64, 65);
                  break;
               case 66:
               case 67:
                  jjCheckNAddTwoStates(67, 65);
                  break;
               case 71:
                  jjCheckNAddTwoStates(71, 72);
                  break;
               case 73:
               case 74:
                  jjCheckNAddTwoStates(74, 72);
                  break;
               case 77:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(77, 78);
                  break;
               case 79:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(79, 80);
                  break;
               case 83:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(56, 57);
                  break;
               case 87:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 92:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 107:
                  if (curChar == 70)
                     jjAddStates(47, 50);
                  break;
               case 109:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 112:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 116:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 121 && kind > 58)
                     kind = 58;
                  break;
               case 122:
               case 136:
               case 142:
               case 156:
               case 162:
               case 190:
               case 195:
                  if (curChar == 97)
                     jjCheckNAdd(121);
                  break;
               case 123:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 105 && kind > 59)
                     kind = 59;
                  break;
               case 127:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 83)
                     jjAddStates(42, 46);
                  break;
               case 130:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 137:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 143:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 116 && kind > 59)
                     kind = 59;
                  break;
               case 147:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 110 && kind > 59)
                     kind = 59;
                  break;
               case 149:
                  if (curChar == 117)
                     jjCheckNAdd(148);
                  break;
               case 150:
                  if (curChar == 77)
                     jjAddStates(38, 41);
                  break;
               case 151:
                  if (curChar == 97)
                     jjCheckNAdd(46);
                  break;
               case 152:
                  if (curChar == 104 && kind > 53)
                     kind = 53;
                  break;
               case 153:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 157:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 111)
                     jjCheckNAdd(148);
                  break;
               case 161:
                  if (curChar == 87)
                     jjAddStates(36, 37);
                  break;
               case 163:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 169:
                  if (curChar == 100 && kind > 59)
                     kind = 59;
                  break;
               case 170:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3, 6);
                  break;
               case 172:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 174:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(27, 29);
                  break;
               case 175:
                  if (curChar == 64)
                     jjCheckNAdd(176);
                  break;
               case 176:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAddTwoStates(176, 177);
                  break;
               case 178:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAddTwoStates(177, 178);
                  break;
               case 179:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 186:
                  if ((0x7fffffeL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAddTwoStates(187, 188);
                  break;
               case 188:
                  if ((0x7fffffe00000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAdd(188);
                  break;
               case 189:
                  if (curChar == 84)
                     jjAddStates(32, 35);
                  break;
               case 191:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 196:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 101 && kind > 59)
                     kind = 59;
                  break;
               case 202:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if (curChar == 117 && kind > 59)
                     kind = 59;
                  break;
               case 204:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 59:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(18, 20);
                  break;
               case 64:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddTwoStates(64, 65);
                  break;
               case 66:
               case 67:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddTwoStates(67, 65);
                  break;
               case 71:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddTwoStates(71, 72);
                  break;
               case 73:
               case 74:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddTwoStates(74, 72);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 205 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   172, 173, 175, 172, 173, 175, 179, 77, 79, 81, 58, 69, 70, 97, 99, 102, 
   103, 104, 59, 60, 62, 65, 66, 68, 72, 73, 75, 173, 174, 175, 89, 95, 
   194, 200, 202, 204, 168, 170, 151, 155, 159, 160, 135, 141, 145, 147, 149, 114, 
   120, 125, 127, 48, 53, 56, 40, 44, 83, 84, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, 
"\114\111\102\122\101\122\131", "\127\105\102\123\111\124\105", "\102\125\111\114\104\111\116\107", 
"\124\111\115\105\117\106\131\105\101\122", "\123\124\101\122\124", "\105\116\104", "\110\117\125\122\123", 
"\103\114\117\123\105\104", "\123\124\101\106\106", "\120\117\123\111\124\111\117\116", 
"\105\115\101\111\114", "\124\131\120\105", "\122\101\124\105", 
"\102\117\117\113\103\117\114\114\105\103\124\111\117\116", "\102\117\117\113", "\124\111\124\114\105", "\101\125\124\110\117\122", 
"\164\157", "\50", "\51", "\173", "\175", "\133", "\135", "\42", "\72", "\73", "\54", 
"\56", "\55", "\137", "\100", "\44", "\57", null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, "\101\115", "\120\115", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0x3e327ffffffffe01L, 0x3fL, 
};
static final long[] jjtoSkip = {
   0x1feL, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x1c0L, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[205];
private final int[] jjstateSet = new int[410];
protected char curChar;
/** Constructor. */
public LibParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public LibParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 205; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100003600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
